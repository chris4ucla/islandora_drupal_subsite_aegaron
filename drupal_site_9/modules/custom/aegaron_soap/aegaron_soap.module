<?php
/**
 * @file
 * Consume Aegaron's SOAP Web Service from the Digital Library
 */

/**
 *
 */
function aegaron_soap_langmap() {
  // mapping of terms
  static $aegaron_soap_languagemap;

  if (is_array($aegaron_soap_languagemap)) {
    return $aegaron_soap_languagemap;
  }

  $aegaron_soap_languagemap = array(
    'Architectural Element' => array(
      'en' => 'Architectural Element',
      'de' => 'Architekturelemente',
      'ar' => 'عناصر معماريه',
    ),
    'Building Materials' => array(
      'en' => 'Building Materials',
      'de' => 'Baumaterial',
      'ar' => 'مواد بناء',
    ),
    'Building Techniques' => array(
      'en' => 'Building Techniques',
      'de' => 'Bautechnik',
      'ar' => 'تقنية  البناء',
    ),
    'Building Typology' => array(
      'en' => 'Building Typology',
      'de' => 'Gebäudetypologie',
      'ar' => 'تصنيف (نوع) المبنى',
    ),
    'Construction and Structural Design' => array(
      'en' => 'Construction and Structural Design',
      'de' => 'Konstruktion und Entwurf',
      'ar' => 'تصميم عماره وبناء',
    ),
    'Ornaments' => array(
      'en' => 'Ornaments',
      'de' => 'Ornamentik',
      'ar' => 'حليات معماريه',
    ),
    'Spatial Lay-out' => array(
      'en' => 'Spatial Lay-out',
      'de' => 'Raumstruktur',
      'ar' => 'تخطيط للمساحه المعماريه',
    ),
    'Technical Term' => array(
      'en' => 'Technical Term',
      'de' => 'technische Begriffe',
      'ar' => 'مصطلحات معماريه',
    ),
  );

  return $aegaron_soap_languagemap;
}

/**
 * Helper function to translate a Term Glossary Category given a category and language to translate to.
 */
function aegaron_soap_translate_cat($cat, $lang) {
    $translation = '';
    $langmap = aegaron_soap_langmap();
    if (array_key_exists($cat, $langmap)) {

      switch ($lang) {
        case 'en':
          $translation = $langmap[$cat]['en'];
          break;

        case 'de':
          $translation = $langmap[$cat]['de'];
          break;

        case 'ar':
          $translation = $langmap[$cat]['ar'];
          break;
      }
    }
    return $translation;
}

/**
 * Implements hook_menu().
 */
function aegaron_soap_menu() {
  $items['search/terms/json'] = array(
    'access callback'   => true, // available to all
    'page callback'     => 'aegaron_soap_search_terms_json_object',
    'delivery callback' => 'drupal_json_output' 
  );

  $items['drawings/json'] = array(
    'access callback'   => true, // available to all
    'page callback'     => 'aegaron_soap_plantitle_json_object',
    'delivery callback' => 'drupal_json_output' 
  );

  $items['drawing/%'] = array(
    'access callback'	=> true,
    'page callback'	=> 'aegaron_soap_detail_drawing_page'
  );

  $items['terms/%'] = array(
    'access callback'	=> true,
    'page callback'	=> 'aegaron_soap_display_term_page'
  );

  $items['browse/terms/en'] = array(
    'title'		=> 'Browse - English',
    'access callback'	=> true,
    'page callback'	=> 'aegaron_soap_browse_terms_en_page'
  );

  $items['browse/terms/de'] = array(
    'title'		=> 'Browse - Deutsch',
    'access callback'	=> true,
    'page callback'	=> 'aegaron_soap_browse_terms_de_page'
  );

  $items['browse/terms/ar'] = array(
    'title'		=> 'Browse - ﻋﺮﺑﻲ',
    'access callback'	=> true,
    'page callback'	=> 'aegaron_soap_browse_terms_ar_page'
  );

  $items['browse/terms'] = array(
    'title'		=> 'Browse Terms',
    'access callback'	=> true,
    'page callback'	=> 'aegaron_soap_browse_terms_page',
  );

  $items['browse/terms/cache'] = array(
    'title'		=> 'Browse Terms - Cache Reset',
    'access callback'	=> true,
    'page callback'	=> 'aegaron_soap_browse_terms_cache_page',
  );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function aegaron_soap_block_info() {

  $blocks['browse_by_en'] = array(
    'info' => t('English Term Glossary Categories'),
    'status' => TRUE,
    'region' => 'sidebar_first',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'browse/terms/en',
  );

  $blocks['browse_by_de'] = array(
    'info' => t('German Term Glossary Categories'),
    'status' => TRUE,
    'region' => 'sidebar_first',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'browse/terms/de',
  );

  $blocks['browse_by_ar'] = array(
    'info' => t('Arabic Term Glossary Categories'),
    'status' => TRUE,
    'region' => 'sidebar_first',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'browse/terms/ar',
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function aegaron_soap_block_view($delta = '') {
  switch ($delta) {
    case 'browse_by_en':
      $block['subject'] = t('Browse By');
      $block['content'] = aegaron_soap_browse_by_block_contents($delta);
      break;

    case 'browse_by_de':
      $block['subject'] = t('Browse By');
      $block['content'] = aegaron_soap_browse_by_block_contents($delta);
      break;

    case 'browse_by_ar':
      $block['subject'] = t('Browse By');
      $block['content'] = aegaron_soap_browse_by_block_contents($delta);
      break;
  }
  return $block;
}

/**
 *
 */
function aegaron_soap_browse_by_block_contents($which_block) {

  $langmap = aegaron_soap_langmap(); 
  $categories = array();
  $items = array();

  // load data from soap
  $service = wsclient_service_load('aegaron_soap_service');

  switch ($which_block) {
    case 'browse_by_en':
      $result = $service->listAllEnglishTerms();
      break;

    case 'browse_by_de':
      $result = $service->listAllGermanTerms();
      break;

    case 'browse_by_ar':
      $result = $service->listAllArabicTerms();
      break;
  }

  $xmlstr = "<<<XML\n" . stripslashes($result->return) . "XML;";
  $xml = new SimpleXMLElement($result->return);

  // parse soap results to acquire categories
  foreach ($xml->category as $category) {
    $cat = 'classification';
    $classification = (string)$category->attributes()->$cat;
    $catid = 'id-'.strtolower(preg_replace('/[^a-zA-Z0-9-]+/', '-', $classification));

    $categories[] = array(
      'catid' => $catid,
      'classification' => $classification,
    );
  }

  // translate terms - TODO
  foreach ($categories as $key => $item) {
    $cat = $item['classification'];

    if (array_key_exists($cat, $langmap)) {

      switch ($which_block) {
        case 'browse_by_en':
          $categories[$key]['orig'] = $cat;
          $categories[$key]['classification'] = $langmap[$cat]['en'];
          break;

        case 'browse_by_de':
          $categories[$key]['orig'] = $cat;
          $categories[$key]['classification'] = $langmap[$cat]['de'];
          break;

        case 'browse_by_ar':
          $categories[$key]['orig'] = $cat;
          $categories[$key]['classification'] = $langmap[$cat]['ar'];
          break;
      }
    }
  }

  // build links
  foreach ($categories as $j => $item) {
    $items[] = array(
      'data' => '<a href="#" data-target="' . $item['catid'] .'">' . $item['classification'] . '</a>',
    );
  }

  $content = theme('item_list', array(
    'items' => $items));

  return $content;
  
}

/**
 * Implements hook_default_wsclient_service().
 */
function aegaron_soap_default_wsclient_service() {
}

/**
 * Implementation of hook_views_query_alter
 * @param type $view
 * @param type $query 
 */
function aegaron_soap_views_query_alter(&$view, &$query) {
}

/**
 * Implementation of hook_theme().
 */
function aegaron_soap_theme($existing, $type, $theme, $path) {

  $themes['views_view__search_terms__page'] = array(
    'template' => 'views-view--search-terms--page',
    'original hook' => 'views_view',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view',
      'aegaron_soap_preprocess_views_view__search_terms__page',
    ),
    'arguments' => array('view' => NULL),
    'path' => drupal_get_path('module', 'aegaron_soap'),
  );

  $themes['views_view__browse_drawings__block'] = array(
    'template' => 'views-view--browse-drawings--block',
    'original hook' => 'views_view',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view',
    ),
    'arguments' => array('view' => NULL),
    'path' => drupal_get_path('module', 'aegaron_soap'),
  );

  $themes['views_view__browse_drawings__block_1'] = array(
    'template' => 'views-view--browse-drawings--block-1',
    'original hook' => 'views_view',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view',
    ),
    'arguments' => array('view' => NULL),
    'path' => drupal_get_path('module', 'aegaron_soap'),
  );

  $themes['views_view__search_drawings__block'] = array(
    'template' => 'views-view--search-drawings--block',
    'original hook' => 'views_view',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view',
    ),
    'arguments' => array('view' => NULL),
    'path' => drupal_get_path('module', 'aegaron_soap'),
  );

  $themes['views_view__search_drawings__page'] = array(
    'template' => 'views-view--search-drawings--page',
    'original hook' => 'views_view',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view',
    ),
    'arguments' => array('view' => NULL),
    'path' => drupal_get_path('module', 'aegaron_soap'),
  );

  $themes['detail_drawing_page'] = array(
    'template' => 'detail-drawing-page',
  );

  $themes['display_term_page'] = array(
    'template' => 'display-term-page',
  );

  $themes['browse_terms_page'] = array(
    'template' => 'browse-terms-page',
  );

  $themes['browse_terms_en_page'] = array(
    'template' => 'browse-terms-en-page',
  );

  $themes['browse_terms_de_page'] = array(
    'template' => 'browse-terms-de-page',
  );

  $themes['browse_terms_ar_page'] = array(
    'template' => 'browse-terms-ar-page',
  );

  $themes['browse_terms_cache_page'] = array(
    'template' => 'browse-terms-cache-page',
    'preprocess functions' => array(
      'template_preprocess',
      'aegaron_soap_preprocess_browse_terms_cache',
    ),
  );

  return $themes;
}

function aegaron_soap_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'views_exposed_form') {
    if ($form['#id'] == 'views-exposed-form-search-terms-page') {
      $form['tid']['#attributes']['class'] = array('auto_submit');
      drupal_add_js(drupal_get_path('module','aegaron_soap') . '/aegaron_soap_autocomplete.js', array('group' => JS_THEME));
      $form['submit']['#value'] = 'Search';
      //$form['submit']['#type'] = 'image';
      //$form['submit']['#alt'] = 'Search';
      //$form['submit']['#src'] = drupal_get_path('theme','aegaron') . "/assets/img/magglass.png";
// kpr($form);
    }
    if ($form['#id'] == 'views-exposed-form-search-drawings-page') {
      $form['submit']['#value'] = 'Search';
      $form['listall']['#markup'] = '<span class="listall"><a href="/search/plans">Show All Drawings</a></span>';
    }
  }
}

function aegaron_soap_preprocess_browse_terms_cache() {

   $flushquery = db_query('SELECT t.tid FROM {taxonomy_term_data} t WHERE t.vid = 2')->fetchCol();
    foreach ($flushquery as $tid) {
      taxonomy_term_delete($tid);
    }

  $service = wsclient_service_load('aegaron_soap_service');
  $result = $service->listAllTerms();
  $xml = new SimpleXMLElement($result->return);

  $terms = array();
  $addterm = new stdClass();

  foreach ($xml->term as $j => $item) {
    foreach ($item->title as $term) {
      if (is_null(existsInArray((string)$term,$terms))) {
        $attr = 'lang';
        $lang = (string)$term->attributes()->$attr;
        array_push($terms, array(
          'name' => (string)$term,
          'field_lang' => $lang,
        ));
        $addterm->tid = '';
        $addterm->vid = 2;
        $addterm->name = (string)$term;
        $addterm->parent = 0;
        $addterm->field_lang[LANGUAGE_NONE][0]['value'] = $lang;
        $test = taxonomy_term_save($addterm);
// kpr($addterm);
      }
    }

    foreach ($item->alttitle as $term) {
      if (is_null(existsInArray((string)$term,$terms))) {
        $attr = 'lang';
        $lang = (string)$term->attributes()->$attr;
        array_push($terms, array(
          'name' => (string)$term,
          'field_lang' => $lang,
        ));
        $addterm->tid = '';
        $addterm->vid = 2;
        $addterm->name = (string)$term;
        $addterm->parent = 0;
        $addterm->field_lang[LANGUAGE_NONE][0]['value'] = $lang;
        $test = taxonomy_term_save($addterm);
// kpr($addterm);
      }
    }
  }
}

function aegaron_soap_preprocess_views_view__search_terms__page() {
}

function aegaron_soap_detail_drawing_page() {
  return theme('detail_drawing_page');
}

function aegaron_soap_display_term_page() {
  return theme('display_term_page');
}

function aegaron_soap_browse_terms_page() {
  return theme('browse_terms_page');
}

function aegaron_soap_browse_terms_en_page() {
  return theme('browse_terms_en_page');
}

function aegaron_soap_browse_terms_de_page() {
  return theme('browse_terms_de_page');
}

function aegaron_soap_browse_terms_ar_page() {
  return theme('browse_terms_ar_page');
}

function aegaron_soap_browse_terms_cache_page() {
  return theme('browse_terms_cache_page');
}

function aegaron_soap_search_terms_json_object() {
  $terms = array();
  $i = 0;
  $vocab = db_query("SELECT tid, name FROM {taxonomy_term_data} WHERE vid = 2 ORDER BY name asc");
  if ($vocab) {
    while ($row = $vocab->fetchAssoc()) {
      $terms[$i]['tid'] = $row['tid'];
      $terms[$i]['name'] = $row['name'];
      $i++;
    }
    $json_terms = drupal_json_output($terms);
    return $json_terms;
  }
}

function aegaron_soap_plantitle_json_object() {

  $cache_id = 'drawingsjson';
  $cached = cache_get($cache_id, 'cache');
  if (isset($cached->data)) {
    $drawings = $cached->data;
  } else {
    $drawings = '';
  }
  if (empty($drawings)) {
    $drawings = array();
    $i = 0;
    $service = wsclient_service_load('aegaron_soap_service');
    $result = $service->listAllDrawings();

    foreach ($result->return as $j => $item) {
      $drawings[$i]['drawing'] = $item->drawing;
      $drawings[$i]['place'] = $item->place;
      $drawings[$i]['planTitle'] = $item->planTitle;
      $drawings[$i]['view'] = $item->view;
      $drawings[$i]['state'] = $item->state;
      $drawings[$i]['thumbnailUrl'] = $item->thumbnailUrl;
      $i++;
    }

  }
  cache_set($cache_id, $drawings, 'cache', CACHE_TEMPORARY);
  $json_map = drupal_json_output($drawings);
  return $json_map;
}

function existsInArray($str, $array) {
  foreach ($array as $key => $val) {
    if ($val['name'] === $str) {
      return $key;
    }
  }
  return null;
}

